=head1 NAME

zadm - Manage OmniOS zones.

=head1 SYNOPSIS

B<zadm> I<command> [I<options...>]

where 'command' is one of the following:

    create -b <brand> [-t <template_path>] <zone_name>
    delete [-f] <zone_name>
    edit <zone_name>
    set <zone_name> <property=value>
    install [-f] <zone_name>
    uninstall [-f] <zone_name>
    show [zone_name [property[,property]...]]
    list [-H] [-F <format>] [-b <brand>] [-s <state>] [zone_name]
    memstat
    list-images [--refresh] [--verbose] [-b <brand>] [-p <provider>]
    pull <image_uuid>
    vacuum [-d <days>]
    brands
    start [-c [extra_args]] <zone_name>
    stop [-c [extra_args]] <zone_name>
    restart [-c [extra_args]] <zone_name>
    poweroff <zone_name>
    reset [-c [extra_args]] <zone_name>
    login <zone_name>
    console [extra_args] <zone_name>
    log <zone_name>
    fw [-r] [-d] [-t] [-m] [-e ipf|ipf6|ipnat] <zone_name>
    snapshot [-d] <zone_name> [<snapname>]
    rollback [-r] <zone_name> <snapname>
    help [-b <brand>]
    doc [-b <brand>] [-a <attribute>]
    man
    version

=head1 BHYVE BRAND SYNOPSIS

B<zadm> I<command> [I<options...>]

where 'command' is one of the following:

    create -b <brand> [-i <image_uuid|image_path_or_uri>] [-t <template_path>] <zone_name>
    delete [-f] <zone_name>
    edit <zone_name>
    set <zone_name> <property=value>
    install [-i <image_uuid|image_path_or_uri>] [-f] <zone_name>
    uninstall [-f] <zone_name>
    show [zone_name [property[,property]...]]
    list [-H] [-F <format>] [-b <brand>] [-s <state>] [zone_name]
    memstat
    list-images [--refresh] [--verbose] [-b <brand>] [-p <provider>]
    pull <image_uuid>
    vacuum [-d <days>]
    brands
    start [-m|--bootmenu] [-c [extra_args]] <zone_name>
    stop [-c [extra_args]] <zone_name>
    restart [-c [extra_args]] <zone_name>
    poweroff <zone_name>
    reset <zone_name>
    efireset <zone_name>
    nmi <zone_name>
    console [extra_args] <zone_name>
    vnc [-w] [<[bind_addr:]port>] <zone_name>
    webvnc [<[bind_addr:]port>] <zone_name>
    log <zone_name>
    fw [-r] [-d] [-t] [-m] [-e ipf|ipf6|ipnat] <zone_name>
    snapshot [-d] <zone_name> [<snapname>]
    rollback [-r] <zone_name> <snapname>
    help [-b <brand>]
    doc [-b <brand>] [-a <attribute>]
    man
    version

=head1 EMU BRAND SYNOPSIS

B<zadm> I<command> [I<options...>]

where 'command' is one of the following:

    create -b <brand> [-i <image_uuid|image_path_or_uri>] [-t <template_path>] <zone_name>
    delete [-f] <zone_name>
    edit <zone_name>
    set <zone_name> <property=value>
    install [-i <image_uuid|image_path_or_uri>] [-f] <zone_name>
    uninstall [-f] <zone_name>
    updateres -i <image_uuid> <zone_name>
    show [zone_name [property[,property]...]]
    list [-H] [-F <format>] [-b <brand>] [-s <state>] [zone_name]
    memstat
    list-images [--refresh] [--verbose] [-b <brand>] [-p <provider>]
    pull <image_uuid>
    vacuum [-d <days>]
    brands
    start [-c [extra_args]] <zone_name>
    stop [-c [extra_args]] <zone_name>
    restart [-c [extra_args]] <zone_name>
    poweroff <zone_name>
    reset [-c [extra_args]] <zone_name>
    console [extra_args] <zone_name>
    monitor <zone_name>
    vnc [-w] [<[bind_addr:]port>] <zone_name>
    webvnc [<[bind_addr:]port>] <zone_name>
    log <zone_name>
    snapshot [-d] <zone_name> [<snapname>]
    rollback [-r] <zone_name> <snapname>
    help [-b <brand>]
    doc [-b <brand>] [-a <attribute>]
    man
    version

=head1 ILLUMOS BRAND SYNOPSIS

B<zadm> I<command> [I<options...>]

where 'command' is one of the following:

    create -b <brand> -i <image_uuid|image_path_or_uri> [-t <template_path>] <zone_name>
    delete [-f] <zone_name>
    edit <zone_name>
    set <zone_name> <property=value>
    install -i <image_uuid|image_path_or_uri> [-f] <zone_name>
    uninstall [-f] <zone_name>
    show [zone_name [property[,property]...]]
    list [-H] [-F <format>] [-b <brand>] [-s <state>] [zone_name]
    memstat
    list-images [--refresh] [--verbose] [-b <brand>] [-p <provider>]
    pull <image_uuid>
    vacuum [-d <days>]
    brands
    start [-c [extra_args]] <zone_name>
    stop [-c [extra_args]] <zone_name>
    restart [-c [extra_args]] <zone_name>
    poweroff <zone_name>
    reset [-c [extra_args]] <zone_name>
    login <zone_name>
    console [extra_args] <zone_name>
    log <zone_name>
    fw [-r] [-d] [-t] [-m] [-e ipf|ipf6|ipnat] <zone_name>
    snapshot [-d] <zone_name> [<snapname>]
    rollback [-r] <zone_name> <snapname>
    help [-b <brand>]
    doc [-b <brand>] [-a <attribute>]
    man
    version

=head1 KVM BRAND SYNOPSIS

B<zadm> I<command> [I<options...>]

where 'command' is one of the following:

    create -b <brand> [-i <image_uuid|image_path_or_uri>] [-t <template_path>] <zone_name>
    delete [-f] <zone_name>
    edit <zone_name>
    set <zone_name> <property=value>
    install [-i <image_uuid|image_path_or_uri>] [-f] <zone_name>
    uninstall [-f] <zone_name>
    show [zone_name [property[,property]...]]
    list [-H] [-F <format>] [-b <brand>] [-s <state>] [zone_name]
    memstat
    list-images [--refresh] [--verbose] [-b <brand>] [-p <provider>]
    pull <image_uuid>
    vacuum [-d <days>]
    brands
    start [-c [extra_args]] <zone_name>
    stop [-c [extra_args]] <zone_name>
    restart [-c [extra_args]] <zone_name>
    poweroff <zone_name>
    reset <zone_name>
    console [extra_args] <zone_name>
    monitor <zone_name>
    vnc [-w] [<[bind_addr:]port>] <zone_name>
    webvnc [<[bind_addr:]port>] <zone_name>
    log <zone_name>
    snapshot [-d] <zone_name> [<snapname>]
    rollback [-r] <zone_name> <snapname>
    help [-b <brand>]
    doc [-b <brand>] [-a <attribute>]
    man
    version

=head1 LX BRAND SYNOPSIS

B<zadm> I<command> [I<options...>]

where 'command' is one of the following:

    create -b <brand> -i <image_uuid|image_path_or_uri> [-t <template_path>] <zone_name>
    delete [-f] <zone_name>
    edit <zone_name>
    set <zone_name> <property=value>
    install -i <image_uuid|image_path_or_uri> [-f] <zone_name>
    uninstall [-f] <zone_name>
    show [zone_name [property[,property]...]]
    list [-H] [-F <format>] [-b <brand>] [-s <state>] [zone_name]
    memstat
    list-images [--refresh] [--verbose] [-b <brand>] [-p <provider>]
    pull <image_uuid>
    vacuum [-d <days>]
    brands
    start [-c [extra_args]] <zone_name>
    stop [-c [extra_args]] <zone_name>
    restart [-c [extra_args]] <zone_name>
    poweroff <zone_name>
    reset [-c [extra_args]] <zone_name>
    login <zone_name>
    console [extra_args] <zone_name>
    log <zone_name>
    fw [-r] [-d] [-t] [-m] [-e ipf|ipf6|ipnat] <zone_name>
    snapshot [-d] <zone_name> [<snapname>]
    rollback [-r] <zone_name> <snapname>
    help [-b <brand>]
    doc [-b <brand>] [-a <attribute>]
    man
    version

=head1 DESCRIPTION

Use zadm to create, edit or manage your zones.

=head2 B<create>

creates a new zone with the name B<zone_name>.

zadm will open an editor showing a suitable default configuration for the
selected brand which can be modified as required. Once the configuration is
saved and the editor is closed, the zone will be created and installed. Any
required VNICs, ZFS datasets or volumes will be automatically set up based on
the configuration.

The zadm configuration format is JSON. Standard zone properties from
the I<zonecfg(1M)> man page are supported via simple "property" : "value" pairs,
single resources as "resource" : { } hash structure, and multiple resources
as "resource" : [ { }, ... ] array of hash structures. For more information
on the available attributes for a particular zone brand, issue
B<zadm doc -b E<lt>brandE<gt>>.

=head2 B<delete>

deletes zone B<zone_name>. You can use the B<-f> flag to force the action.

=head2 B<edit>

modify the configuration of a zone. See the descriptions in the B<create>
function for details.

=head2 B<set>

modify the configuration of a zone, changing a single attribute. See the
description in the B<create> function for details. Set only supports simple
"property" : "value" pairs.

=head2 B<install>

installs a zone. If the zone is already installed then the B<-f> option must
be provided in order to first uninstall the zone.

=head2 B<uninstall>

uninstalls a zone. You can use the B<-f> flag to force the action.

=head2 B<show>

shows the configuration for all zones in JSON format, or for a single zone
if a B<zone_name> is provided.

=head2 B<list>

prints the status of all existing zones or B<zone_name> if given.
Available options are:

  -F <format>                 Specify an alternative output format.
                              The value of format can be json, yaml or toml.
  -H                          Omit the headers from the listing.
  -b|--brand <brand>          List status of zones with brand <brand>.
  -s|--state <state>          List status of zones in state <state>.

=head2 B<memstat>

prints memory usage/caps for running zones.

=head2 B<list-images>

list all available images ready for download and install.

=head2 B<pull>

downloads the image with ID B<image_uuid> and caches this without creating
a zone with it.

=head2 B<vacuum>

removes images from the local cache which have not been accessed in the last
30 days or the days specified with the B<-d> option.

=head2 B<brands>

list all available and installed zone brands

=head2 B<start>

starts the zone B<zone_name>. Attaches to the console if B<-c> is given.
Any B<extra_args> will be passed to B<zlogin(1)>.

=head2 B<stop>

stops the zone B<zone_name>. Attaches to the console if B<-c> is given.
Any B<extra_args> will be passed to B<zlogin(1)>.

=head2 B<restart>

restarts the zone B<zone_name>. Attaches to the console if B<-c> is given.
Any B<extra_args> will be passed to B<zlogin(1)>.

=head2 B<poweroff>

forcefully stops the zone B<zone_name> (i.e. "unplug")

=head2 B<reset>

forcefully stops the zone B<zone_name> (i.e. "unplug"); then boots the zone.

=head2 B<login>

log into B<zone_name>.

=head2 B<console>

attaches to the B<zone_name> zone console.
Any B<extra_args> will be passed to B<zlogin(1)>.

=head2 B<log>

displays the boot log for B<zone_name>.

=head2 B<fw>

manages the zone firewall. With no arguments, show the currently loaded
firewall and NAT rules for the zone.

  -r|--reload                 Reload and enable the zone firewall
  -m|--monitor                Monitor zone firewall activity in real-time to stdout
  -t|--top                    Show active zone firewall state in a top-like view
  -e|--edit <ipf|ipf6|ipnat>  Open a zone firewall configuration file in an editor.
  -d|--disable                Disable the zone firewall. It will be re-enabled
                              on zone reboot or with -r|--reload

=head2 B<snapshot>

Manages snapshots for a zone. A snapshot is a point-in-time copy that can
be easily restored in the future using the B<rollback> command.  This command
is not available for zones that use boot environments, such as I<lipkg>
zones; for these zones, use the B<beadm create beName@snapshot> and
B<beadm rollback beName@snapshot> commands from inside the zone to achieve
the same result.

With no arguments, B<snapshot> displays a list of current snapshots for the
zone. If called with a snapshot name argument, a new snapshot is taken. For
bhyve or KVM zones, this snapshot encompasses the boot disk and for other
zones it includes the datasets that make up the zone root. To delete a snapshot
use the optional B<-d> flag before the zone name.

  -d|--destroy                Remove the named snapshot.

=head2 B<rollback>

Rolls back a zone to a previously taken snapshot. See the B<snapshot> command
for more details.

  -r                          Destroy any snapshots and bookmarks more recent
                              than the one specified.

=head2 B<doc>

displays information on the available attributes for a particular zone brand.
If the optional B<-a> B<E<lt>attributeE<gt>> argument is provided then only
that attribute is shown.

=head1 COPYRIGHT

Copyright 2022 OmniOS Community Edition (OmniOSce) Association.

=head1 LICENSE

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see L<http://www.gnu.org/licenses/>.

=head1 AUTHOR

S<Andy Fiddaman E<lt>omnios@citrus-it.co.ukE<gt>>
S<Dominik Hassler E<lt>hadfl@omnios.orgE<gt>>
S<Tobias Oetiker E<lt>tobi@oetiker.chE<gt>>

=head1 HISTORY

2020-04-12 had Initial Version

=cut

